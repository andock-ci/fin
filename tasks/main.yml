---
- block:
  - name: "Check whether the environment already exists.."
    stat:
      path: "{{ environment_path }}"
    register: existing_environment_path_before
    tags: ['init','up','update','test','stop','rm']

  - name: "Set fact environment_exists_before (Environment already exists..)"
    set_fact: environment_exists_before="{{ existing_environment_path_before.stat.exists }}"
    tags: ['init','up','update','test','stop','rm']

  - name: "Create environment folder"
    file:
      state: directory
      path: "{{ environment_path }}"
    tags: ['init']

  - name: "Check whether the environment exists or has created.."
    stat:
      path: "{{ environment_path }}"
    register: existing_environment_path
    tags: ['init','up','update','test','stop','rm']

  - name: "Set fact environment_exists (Environment exists or has created..)"
    set_fact: environment_exists="{{ existing_environment_path.stat.exists }}"
    tags: ['init','up','update','test','stop','rm']

  - name: "Prepare update."
    file: dest="{{ environment_path }}" mode=777  recurse=yes
    tags: ['update','test']
    when: environment_exists

  - name: "Clone or pull repository"
    git:
      repo: "{{ git_repository_path }}"
      dest: "{{ environment_path }}"
      version: "{{ branch }}{{target_branch_suffix}}"
      accept_hostkey: true
      force: yes
    tags: ['init','update','test']
    when: environment_exists

  - name: "Create docksal-local.env file"
    template:
      src: "templates/.docksal/docksal-local.env"
      dest: "{{ environment_path }}/.docksal/docksal-local.env"
    tags: ['init']
    when: environment_exists

  - name: "Create docksal-local.yml file"
    template:
      src: "templates/.docksal/docksal-local.yml"
      dest: "{{ environment_path }}/.docksal/docksal-local.yml"
    tags: ['init']
    when: environment_exists

  - name: "Start environment services (fin up)"
    command: fin up
    args:
      warn: false
      chdir: "{{ environment_path }}"
    tags: ['init', 'up', 'update','test']
    when: environment_exists

  - name: "Include init tasks"
    include_tasks: "{{ hook_init_tasks | default(role_path  ~ '/hooks/hook_init_tasks.yml') }}"
    tags: ['init']
    when: environment_exists

  - name: "Add environment alias (fin alias {{ alias }})"
    command: "fin alias {{ environment_path }} {{ alias }}"
    args:
      warn: false
      chdir: "{{ environment_path }}"
    tags: ['init']
    when:
      - environment_exists
      - environment_exists_before == false

  - name: "Include update tasks"
    include_tasks: "{{ hook_update_tasks | default(role_path ~ '/hooks/hook_update_tasks.yml') }}"
    tags: ['update']
    when: environment_exists

  - name: "Include test tasks"
    include_tasks: "{{ hook_test_tasks | default(role_path ~ '/hooks/hook_test_tasks.yml') }}"
    tags: ['test']
    when: environment_exists

  - name: "Stop Environmnet (fin stop)"
    command: fin stop
    args:
      warn: false
      chdir: "{{ environment_path }}"
    tags: ['stop', 'rm']
    ignore_errors: yes
    when: environment_exists

  - name: "Remove environmnet alias {{ alias }}"
    command: "fin alias remove {{ alias }}"
    args:
      warn: false
      chdir: "{{ environment_path }}"
    tags: ['rm']
    ignore_errors: yes
    when: environment_exists

  - name: "Remove environmnet services (fin rm)"
    command: "fin rm -f"
    args:
      warn: false
      chdir: "{{ environment_path }}"
    tags: ['rm']
    ignore_errors: yes
    when: environment_exists

  - name: "Clear Prepare."
    file: dest="{{ environment_path }}" mode=777  recurse=yes
    tags: ['rm']
    ignore_errors: yes
    when: environment_exists

  - name: "Remove environment folder"
    file:
      state: absent
      path: "{{ environment_path }}"
    tags: ['rm']
    when: environment_exists